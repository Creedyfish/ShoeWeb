generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Post {
  id    Int    @id @default(autoincrement())
  title String
}

model User {
  email    String   @unique
  password String
  role     String?
  id       String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  Cart     Cart[]
  Orders   Orders[]
}

model Product {
  product_id        Int                @id(map: "products_pkey") @default(autoincrement())
  name              String             @db.VarChar(255)
  description       String?
  price             Decimal            @db.Decimal(10, 2)
  image             String             @db.VarChar(255)
  bgcolor           String?            @db.VarChar
  Cart              Cart[]
  Featured_Products Featured_Products?
  Orders            Orders[]
  images            images?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Featured_Products {
  id         Int     @id @default(autoincrement())
  tagline    String  @db.VarChar
  feat_image String? @db.VarChar
  Product    Product @relation(fields: [id], references: [product_id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Cart {
  cart_id    String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id Int
  quantity   Int?
  created_at DateTime @default(now()) @db.Timestamptz(6)
  user_id    String   @db.Uuid
  Product    Product  @relation(fields: [product_id], references: [product_id], onDelete: Cascade)
  User       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([product_id, user_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Orders {
  id         BigInt   @id @default(autoincrement())
  user_id    String?  @db.Uuid
  product_id Int?
  quantity   Int?
  order_time DateTime @default(now()) @db.Timestamptz(6)
  Product    Product? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction)
  User       User?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model images {
  id            Int      @id @default(autoincrement())
  preview_image String?  @db.VarChar
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  Product       Product  @relation(fields: [id], references: [product_id], onDelete: NoAction, onUpdate: NoAction)
}
